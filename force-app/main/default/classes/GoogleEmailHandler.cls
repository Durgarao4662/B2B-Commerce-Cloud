//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class GoogleEmailHandler implements Auth.RegistrationHandler{
    
    global User createUser(Id portalId, Auth.UserData data){
        
        System.debug(SYSTEM.LoggingLevel.DEBUG, '\n **** GEmail Data '+data);
        System.debug(SYSTEM.LoggingLevel.DEBUG, '\n **** GEmail Att Map '+data.attributeMap);
        String userName = data.email.subStringBefore('@') + '@vc.com.dev';
        if(data.attributeMap.containsKey('sfdc_networkid')) {
            userName = data.email.subStringBefore('@') + '@vc.com.portal';
        }
        List<user> userList = [select Id, Name,Email, UserName from User where UserName =: userName AND isActive = true];
        User user = new User();
        if(userList != null && userList.size()>0){
            user = userList.get(0);
            return user;
        }
        else{
            
            if(data.attributeMap.containsKey('sfdc_networkid')) {
                Account a = [select Id from Account where name = 'Google Email'];
                Contact c = new Contact();
                c.AccountId = a.Id;
                c.email = data.email;
                c.FirstName = data.firstName;
                c.LastName = data.lastName;
                insert(c);
                
                User u = new User();
                Profile p = [Select Id from Profile where name= 'VC Community Profile User'];
                String partnerUserName = data.email.subStringBefore('@')+'@vc.com.portal';
                u.Username = partnerUserName;
                u.Email = data.email;
                u.FirstName = data.firstName;
                u.LastName = data.lastName;
                String alias = u.Username;
                if(alias !=null && alias.length()>8){
                    alias = alias.substring(0,8);
                    
                }
                u.Alias = alias;
                u.LanguageLocaleKey = UserInfo.getLocale();
                u.LocaleSidKey = UserInfo.getLocale();
                u.EmailEncodingKey = 'UTF-8';
                u.TimeZoneSidKey = 'America/Los_Angeles';
                u.ProfileId = p.Id;
                u.ContactId = c.Id;
                return u;
                
            } else {
                //This is not a community, so create a regular standard user
                User u = new User();
                Profile p = [SELECT Id FROM profile WHERE name='Standard User'];
                //TODO: Customize the username. Also check that the username doesn't already exist and
                //possibly ensure there are enough org licenses to create a user. Must be 80 characters
                //or less.
                u.username = data.email.subStringBefore('@') + '@vc.com.dev';
                u.email = data.email;
                u.lastName = data.lastName;
                u.firstName = data.firstName;
                String alias = u.username;
                //Alias must be 8 characters or less
                if (alias != null && alias.length() > 8) {
                    alias = alias.substring(0, 8);
                }
                u.alias = alias;
                u.languagelocalekey = UserInfo.getLocale();
                u.localesidkey = UserInfo.getLocale();
                u.emailEncodingKey = 'UTF-8';
                u.timeZoneSidKey = 'America/Los_Angeles';
                u.profileId = p.Id;
                return u;
            }
            
        }
        
    }
    
    global void updateUser(Id userId, Id portalId, Auth.UserData data){
        String userName = data.email.subStringBefore('@') + '@vc.com.dev';
        if(data.attributeMap.containsKey('sfdc_networkid')) {
            userName = data.email.subStringBefore('@') + '@vc.com.portal';
        }
        List<user> userList = [select Id, Name,Email, UserName from User where UserName =: userName AND isActive = true];
        User u = new User();
        if(userList != null && userList.size()>0){
            u = userList.get(0);
        }
    }
}